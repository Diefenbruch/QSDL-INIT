/******************************************************************************
 *                            pcs_application_applicationmanager.h
 *
 * Generated by QCG in January, 28, 2019 at 13:54:45
 *           on system: raspberrypi (Linux 4.14.79-v7+ armv7l)
 *
 * User: QSDL
 *
 * Copyright (C) 1995-98 Marc Diefenbruch (md@informatik.uni-essen.de)
 *                and Joerg Ruehl (jruehl@informatik.uni-essen.de)
 *
 * All rights reserved.
 *
 *****************************************************************************/

#ifndef _PCS_APPLICATION_APPLICATIONMANAGER_H_
#define _PCS_APPLICATION_APPLICATIONMANAGER_H_

/******************************************************************************
 * Includes
 *****************************************************************************/

#include "blk_application.h"

#include <SCL/SCProcess.h>
#include <SCL/SCStateType.h>
#include <SCL/SCTimerType.h>
#include <SCL/SCProcedureType.h>

/******************************************************************************
 * Prozessklasse des SDL-Prozesses 'applicationmanager' (Data)
 *****************************************************************************/

class pcs_application_applicationmanager_data : public blk_application
{
  public:
    /**************************************************************************
     * Initialisierungsfunktion des Prozesses (statisch)
     *************************************************************************/

    static SCBoolean Initialize(void);

    /**************************************************************************
     * Beendigungsfunktion des Prozesses (statisch)
     *************************************************************************/

    static void Finish(void);

    /**************************************************************************
     * Konstruktor
     *************************************************************************/

    pcs_application_applicationmanager_data(void);

    /**************************************************************************
     * Destruktor
     *************************************************************************/

    ~pcs_application_applicationmanager_data(void);

    /**************************************************************************
     * IDs der Timertypen auf Prozessebene
     *************************************************************************/

    enum
    {
      tim_type_id_time_between_applications = kSCSignalTypeIDBase + 22
    };

    /**************************************************************************
     * Timertypen auf Prozessebene (statisch)
     *************************************************************************/

    static SCTimerType * tim_type_time_between_applications;

    /**************************************************************************
     * Benutzerdefinierte SDL-Datentypen auf Prozessebene
     *************************************************************************/

    static SCInteger syn_first_process_id;

};

/******************************************************************************
 * Prozessklasse des SDL-Prozesses 'applicationmanager' (Instanz)
 *****************************************************************************/

class pcs_application_applicationmanager : public SCProcess,
 public pcs_application_applicationmanager_data
{
  public:
    /**************************************************************************
     * Initialisierungsfunktion des Prozesses (statisch)
     *************************************************************************/

    static SCBoolean Initialize(void);

    /**************************************************************************
     * Beendigungsfunktion des Prozesses (statisch)
     *************************************************************************/

    static void Finish(void);

    /**************************************************************************
     * Konstruktoren
     *************************************************************************/

    pcs_application_applicationmanager(const SCProcessID, const SCProcessType *);
    pcs_application_applicationmanager(SCMem &);

    /**************************************************************************
     * Destruktor
     *************************************************************************/

    ~pcs_application_applicationmanager(void);

    /**************************************************************************
     * Virtuelle Save- & Restore-Methoden
     *************************************************************************/

    SCBoolean Save(SCMem &) const;
    SCBoolean Restore(SCMem &);

    /**************************************************************************
     * Virtuelle Size-Methode
     *************************************************************************/

    void Size(SCSize *) const;

    /**************************************************************************
     * Display-Methoden
     *************************************************************************/

    friend SCStream& operator<<(SCStream &, const pcs_application_applicationmanager &);

    /**************************************************************************
     * Implementierungsmethode
     *************************************************************************/

    void Body(void);

    /**************************************************************************
     * Lokale Variablen des Prozesses
     *************************************************************************/

    SCInteger v_last_process_id;

    /**************************************************************************
     * IDs der Zustandstypen des Prozesses
     *************************************************************************/

    enum
    {
      state_type_id_start = kSCStateTypeIDBase + 14,
      state_type_id_createapplicationprocess
    };

    /**************************************************************************
     * Zustandstypen des Prozesses (statisch)
     *************************************************************************/

    static SCStateType * state_type_start;
    static SCStateType * state_type_createapplicationprocess;

    /**************************************************************************
     * Input-Sets der Transitionen des Prozesses (statisch)
     *************************************************************************/


    /**************************************************************************
     * Standardvariablen zur Prozesssteuerung
     *************************************************************************/

    SCInteger v_cur_state;
    SCInteger v_transition_id;
    SCTransition *v_transition;
    SCSignalType *v_signal_read;

};

#endif
